from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from yoomoney import Quickpay
from config import config

router = Router()


class PaymentStates(StatesGroup):
    waiting_for_amount = State()


# Create payment keyboard
def get_payment_keyboard(amount: int, label: str) -> InlineKeyboardMarkup:
    quickpay = Quickpay(
        receiver=config.yoomoney_receiver,
        quickpay_form="shop",
        targets="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞",
        paymentType="SB",
        sum=amount,
        label=label
    )
    
    keyboard = [
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=quickpay.base_url)],
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"check_payment_{label}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_payment")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


@router.message(Command("donate", prefix="/"))
async def donate_command(message: types.Message):
    """Handle /donate command"""
    keyboard = [
        [InlineKeyboardButton(text="üí∞ 100 ‚ÇΩ", callback_data="donate_100")],
        [InlineKeyboardButton(text="üí∞ 300 ‚ÇΩ", callback_data="donate_300")],
        [InlineKeyboardButton(text="üí∞ 500 ‚ÇΩ", callback_data="donate_500")],
        [InlineKeyboardButton(text="üí∞ 1000 ‚ÇΩ", callback_data="donate_1000")],
        [InlineKeyboardButton(text="üí≥ –î—Ä—É–≥–∞—è —Å—É–º–º–∞", callback_data="custom_amount")]
    ]
    
    await message.answer(
        "üíù –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )


@router.callback_query(F.data.startswith("donate_"))
async def handle_donate_amount(callback: types.CallbackQuery):
    """Handle donation amount selection"""
    amount_str = callback.data.split("_")[1]
    
    if amount_str == "custom":
        await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è (–≤ —Ä—É–±–ª—è—Ö):")
        # Here you could set a state to wait for custom amount
        await callback.answer()
        return
    
    try:
        amount = int(amount_str)
        label = f"donate_{callback.from_user.id}_{amount}"
        
        keyboard = get_payment_keyboard(amount, label)
        
        await callback.message.edit_text(
            f"üí≥ –û–ø–ª–∞—Ç–∞ {amount} ‚ÇΩ\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û–ø–ª–∞—Ç–∏—Ç—å' –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ.\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É'.",
            reply_markup=keyboard
        )
        await callback.answer()
        
    except ValueError:
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞", show_alert=True)


@router.callback_query(F.data.startswith("check_payment_"))
async def check_payment(callback: types.CallbackQuery):
    """Check payment status"""
    label = callback.data.split("check_payment_")[1]
    
    # In a real implementation, you would check the payment status
    # using YooMoney API with your token
    await callback.answer(
        "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...\n\n"
        "–í MVP –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.\n"
        "–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API YooMoney.",
        show_alert=True
    )


@router.callback_query(F.data == "cancel_payment")
async def cancel_payment(callback: types.CallbackQuery):
    """Cancel payment"""
    await callback.message.edit_text("‚ùå –û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    await callback.answer()


@router.message(Command("payment_info", prefix="/"))
async def payment_info(message: types.Message):
    """Show payment information"""
    info_text = (
        "üí≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö:\n\n"
        f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å: {config.yoomoney_receiver}\n"
        "–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ÆMoney\n\n"
        "–î–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /donate"
    )
    await message.answer(info_text)
